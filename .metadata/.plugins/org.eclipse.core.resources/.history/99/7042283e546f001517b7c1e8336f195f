package modules;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;

import logmanager.Logger;

public class HttpParser {

	public final static String HTTP_METHOD_KEY = "method";
	public final static String HTTP_URI_KEY = "uri";

	private static Logger logger = Logger.getInstance();
	
	public static Map<String, String> getHttpHeader(InputStream is) {
		logger.trace("enter HttpRequestHandler.getHttpHeader()");
		HashMap<String, String> headers = new HashMap<>();
		try {
			String str = readStringLine(is);
			
			
			
//			if(str.equals("")) return null;
//			else {
//				headers.put(HttpParser.HTTP_METHOD_KEY, str.substring(0,str.indexOf(' ')));
//				headers.put(HttpParser.HTTP_URI_KEY, str.substring(str.indexOf(' ')+1));
//			}
//			
			while(!(str = readStringLine(is)).equals("")) {
//				headers.put(str.substring(0,str.indexOf(':')), str.substring(str.indexOf(':')+2));
				System.out.println(str);
			}
		} catch (IOException e) {
			logger.fatal("I/O failure reading from socket inputstream", e);
		}

		return null;
	}
	
	private static byte[] readRawLine(InputStream is) throws IOException {
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		int b;
		while ((b = is.read()) >= 0) {
			baos.write(b);
			if (b == '\n')
				break;
		}
		return baos.toByteArray();
	}

	private static String readStringLine(InputStream is) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(is));
		return br.readLine();
	}
	
}
