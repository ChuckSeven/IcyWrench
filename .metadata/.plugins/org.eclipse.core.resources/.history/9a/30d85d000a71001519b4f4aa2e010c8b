package core;

import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.concurrent.Executor;

import exceptions.IllegalConfigurationException;
import logmanager.Logger;
import logmanager.Logger.Output;
import modules.RequestHandler;
import modules.RequestHandler.HandlerType;

/**
 * Threaded WebServer which can run different modules for request handling. Http Module is provided.
 * @author 150021237
 *
 */
public class IcyWrench {

	public static final int SERVER_PORT = 12345;
	public static final int THREAD_COUNT = Runtime.getRuntime().availableProcessors();
	public Logger logger;
	
	private ServerSocket serverSocket;
	private Executor exec;
	private HandlerType handlerType;
	
	/**
	 * Initializes IcyWrench with the http module.
	 */
	public IcyWrench() {
		
		handlerType = RequestHandler.HandlerType.HTTP;
		
		logger = Logger.getInstance(Output.console);
		
		// Initialise thread pool
		exec = new ThreadPoolExecutor(THREAD_COUNT);
		
		// Create task and let it be executed by worker threads
		try {
			serverSocket = new ServerSocket(SERVER_PORT);
			logger.info(1, "Server running on port " + SERVER_PORT);
			while(true) {
				final Socket s = serverSocket.accept();
				Runnable task = () -> {
					RequestHandler.use(handlerType, s);
				};
				logger.info(s.getInetAddress().toString(), 1, "New Socket Connection.");
				exec.execute(task);
			}
		} catch (IOException e) {
			logger.fatal(null, "Server Socket failure.", e);
			
		}
	}


	
	/**
	 * Properly shuts down the webs server service and terminates the program.
	 */
	public void shutdown() {
		logger.info(null, 1, "Service shuting down ...");
		System.exit(0);
	}

	
}
