package Parser;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Immutable class which parses URI into its parts
 * @author is59
 *
 */
public class Uri {
	private final String path;
	private final String filename;
	private final String filetype;
	private final Map<String, String> args;
	private final boolean version10;

	public Uri(String rawUri) {
		
		rawUri = rawUri.trim();
		
		//http version
		String last = rawUri.substring(rawUri.lastIndexOf(' ')+1);
		if(last.toUpperCase().equals("HTTP/1.0")) {
			version10 = true;
			rawUri = rawUri.substring(0, rawUri.lastIndexOf(' '));
		} else {
			version10 = false;
		}
		
		//path
		path = rawUri.substring(0,rawUri.lastIndexOf('/')+1);
		
		//filename and type
		String afterPath = rawUri.substring(rawUri.lastIndexOf('/'));
		String filePart = afterPath.substring(0, afterPath.indexOf('?'));
		String[] f = filePart.split(".");
		filename = f[0].trim();
		filetype = f[0].trim();
		
		//args
		String argsPart = afterPath.substring(afterPath.indexOf('?')+1);
		List<String> rawArgs = Arrays.asList(argsPart.split("&"));
		HashMap<String, String> args = new HashMap<>();
		rawArgs.forEach((str) -> {
			String key = str.substring(0,str.indexOf('='));
			String value = str.substring(str.indexOf('=')+1);
			args.put(key, value);
		});
		
		
	}
	
	public Uri(String path, String filename, String filetype, Map<String, String> args, boolean version10) {
		this.path = path;
		this.filename = filename;
		this.filetype = filetype;
		this.args = new HashMap<String, String>(args);
		this.version10 = version10;
	}
}
